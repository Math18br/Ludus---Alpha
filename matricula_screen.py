from database import insert_identificacao_aluno,insert_saude,insert_endereco,insert_dados_pais_responsavel,insert_informacoes_matricula,insert_saude,insert_certidao
from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox
from criar_excel import adicionar_dados_excel

class UI_MatriculaWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1360, 850)
        MainWindow.setMaximumSize(QtCore.QSize(1980, 1080))
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        MainWindow.setFont(font)
        MainWindow.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(parent=self.centralwidget,  clicked = lambda: self.matricula_aluno())
        self.pushButton.setGeometry(QtCore.QRect(980, 690, 196, 71))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.layoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(770, 30, 561, 601))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.groupBox = QtWidgets.QGroupBox(parent=self.layoutWidget)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.nome_pai = QtWidgets.QLineEdit(parent=self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.nome_pai.setFont(font)
        self.nome_pai.setMaxLength(255)
        self.nome_pai.setClearButtonEnabled(True)
        self.nome_pai.setObjectName("nome_pai")
        self.verticalLayout_3.addWidget(self.nome_pai)
        self.nome_mae = QtWidgets.QLineEdit(parent=self.groupBox)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.nome_mae.setFont(font)
        self.nome_mae.setMaxLength(255)
        self.nome_mae.setClearButtonEnabled(True)
        self.nome_mae.setObjectName("nome_mae")
        self.verticalLayout_3.addWidget(self.nome_mae)
        self.verticalLayout_6.addWidget(self.groupBox)
        self.frame = QtWidgets.QFrame(parent=self.layoutWidget)
        self.frame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.deficiencias = QtWidgets.QGroupBox(parent=self.frame)
        self.deficiencias.setObjectName("deficiencias")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.deficiencias)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.def_baixa_visao = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_baixa_visao.setObjectName("def_baixa_visao")
        self.verticalLayout_2.addWidget(self.def_baixa_visao)
        self.def_cegueira = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_cegueira.setObjectName("def_cegueira")
        self.verticalLayout_2.addWidget(self.def_cegueira)
        self.def_auditiva = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_auditiva.setObjectName("def_auditiva")
        self.verticalLayout_2.addWidget(self.def_auditiva)
        self.def_intelectual = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_intelectual.setObjectName("def_intelectual")
        self.verticalLayout_2.addWidget(self.def_intelectual)
        self.def_fisica = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_fisica.setObjectName("def_fisica")
        self.verticalLayout_2.addWidget(self.def_fisica)
        self.def_multipla = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_multipla.setObjectName("def_multipla")
        self.verticalLayout_2.addWidget(self.def_multipla)
        self.def_down = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_down.setObjectName("def_down")
        self.verticalLayout_2.addWidget(self.def_down)
        self.def_surdez = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_surdez.setObjectName("def_surdez")
        self.verticalLayout_2.addWidget(self.def_surdez)
        self.def_surdocegueira = QtWidgets.QCheckBox(parent=self.deficiencias)
        self.def_surdocegueira.setObjectName("def_surdocegueira")
        self.verticalLayout_2.addWidget(self.def_surdocegueira)
        self.gridLayout_4.addWidget(self.deficiencias, 0, 1, 2, 1)
        self.transtorno_global_desenvolvimento = QtWidgets.QGroupBox(parent=self.frame)
        self.transtorno_global_desenvolvimento.setObjectName("transtorno_global_desenvolvimento")
        self.layoutWidget1 = QtWidgets.QWidget(parent=self.transtorno_global_desenvolvimento)
        self.layoutWidget1.setGeometry(QtCore.QRect(10, 25, 251, 96))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.def_autismo = QtWidgets.QCheckBox(parent=self.layoutWidget1)
        self.def_autismo.setObjectName("def_autismo")
        self.verticalLayout_5.addWidget(self.def_autismo)
        self.def_rett = QtWidgets.QCheckBox(parent=self.layoutWidget1)
        self.def_rett.setObjectName("def_rett")
        self.verticalLayout_5.addWidget(self.def_rett)
        self.def_asperger = QtWidgets.QCheckBox(parent=self.layoutWidget1)
        self.def_asperger.setObjectName("def_asperger")
        self.verticalLayout_5.addWidget(self.def_asperger)
        self.def_TDI = QtWidgets.QCheckBox(parent=self.layoutWidget1)
        self.def_TDI.setObjectName("def_TDI")
        self.verticalLayout_5.addWidget(self.def_TDI)
        self.gridLayout_4.addWidget(self.transtorno_global_desenvolvimento, 0, 0, 1, 1)
        self.groupBox_8 = QtWidgets.QGroupBox(parent=self.frame)
        self.groupBox_8.setObjectName("groupBox_8")
        self.altas_habilidades = QtWidgets.QCheckBox(parent=self.groupBox_8)
        self.altas_habilidades.setGeometry(QtCore.QRect(10, 57, 216, 19))
        self.altas_habilidades.setObjectName("altas_habilidades")
        self.gridLayout_4.addWidget(self.groupBox_8, 1, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.frame)
        self.caixa_endereco = QtWidgets.QGroupBox(parent=self.layoutWidget)
        self.caixa_endereco.setObjectName("caixa_endereco")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.caixa_endereco)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.municipio_endereco = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.municipio_endereco.setFont(font)
        self.municipio_endereco.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.municipio_endereco.setText("")
        self.municipio_endereco.setMaxLength(30)
        self.municipio_endereco.setClearButtonEnabled(False)
        self.municipio_endereco.setObjectName("municipio_endereco")
        self.gridLayout_2.addWidget(self.municipio_endereco, 2, 0, 1, 3)
        self.CEP = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        self.CEP.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.CEP.setFont(font)
        self.CEP.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly)
        self.CEP.setText("")
        self.CEP.setMaxLength(8)
        self.CEP.setClearButtonEnabled(False)
        self.CEP.setObjectName("CEP")
        self.CEP.setValidator(QtGui.QIntValidator())
        self.gridLayout_2.addWidget(self.CEP, 1, 4, 1, 2)
        self.bairro_endereco = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.bairro_endereco.setFont(font)
        self.bairro_endereco.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.bairro_endereco.setText("")
        self.bairro_endereco.setMaxLength(32)
        self.bairro_endereco.setClearButtonEnabled(False)
        self.bairro_endereco.setObjectName("bairro_endereco")
        self.gridLayout_2.addWidget(self.bairro_endereco, 2, 3, 1, 2)
        self.complemento = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.complemento.setFont(font)
        self.complemento.setMaxLength(10)
        self.complemento.setClearButtonEnabled(False)
        self.complemento.setObjectName("complemento")
        self.gridLayout_2.addWidget(self.complemento, 1, 0, 1, 2)
        self.numero = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.numero.setFont(font)
        self.numero.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly)
        self.numero.setText("")
        self.numero.setMaxLength(255)
        self.numero.setClearButtonEnabled(False)
        self.numero.setObjectName("numero")
        self.numero.setValidator(QtGui.QIntValidator())
        self.gridLayout_2.addWidget(self.numero, 1, 2, 1, 2)
        self.endereco = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.endereco.setFont(font)
        self.endereco.setMaxLength(255)
        self.endereco.setClearButtonEnabled(True)
        self.endereco.setObjectName("endereco")
        self.gridLayout_2.addWidget(self.endereco, 0, 0, 1, 6)
        self.uf_endereco = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        self.uf_endereco.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.uf_endereco.setFont(font)
        self.uf_endereco.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhUppercaseOnly)
        self.uf_endereco.setText("")
        self.uf_endereco.setMaxLength(2)
        self.uf_endereco.setClearButtonEnabled(False)
        self.uf_endereco.setObjectName("uf_endereco")
        self.gridLayout_2.addWidget(self.uf_endereco, 2, 5, 1, 1)
        self.telefone = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        self.telefone.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.telefone.setFont(font)
        self.telefone.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly|QtCore.Qt.InputMethodHint.ImhPreferNumbers)
        self.telefone.setText("")
        self.telefone.setMaxLength(13)
        self.telefone.setClearButtonEnabled(False)
        self.telefone.setObjectName("telefone")
        self.telefone.setValidator(QtGui.QIntValidator())
        self.gridLayout_2.addWidget(self.telefone, 4, 3, 1, 1)
        self.lab_zona = QtWidgets.QLabel(parent=self.caixa_endereco)
        self.lab_zona.setObjectName("lab_zona")
        self.gridLayout_2.addWidget(self.lab_zona, 3, 0, 1, 1)
        self.sel_zona = QtWidgets.QComboBox(parent=self.caixa_endereco)
        self.sel_zona.setObjectName("sel_zona")
        self.sel_zona.addItem("")
        self.sel_zona.addItem("")
        self.sel_zona.addItem("")
        self.gridLayout_2.addWidget(self.sel_zona, 4, 0, 1, 2)
        self.email = QtWidgets.QLineEdit(parent=self.caixa_endereco)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.email.setFont(font)
        self.email.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhEmailCharactersOnly|QtCore.Qt.InputMethodHint.ImhPreferNumbers)
        self.email.setText("")
        self.email.setMaxLength(25)
        self.email.setClearButtonEnabled(False)
        self.email.setObjectName("email")
        self.gridLayout_2.addWidget(self.email, 6, 0, 1, 6)
        self.verticalLayout_6.addWidget(self.caixa_endereco)
        self.layoutWidget2 = QtWidgets.QWidget(parent=self.centralwidget)
        self.layoutWidget2.setGeometry(QtCore.QRect(21, 31, 741, 781))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.id_aluno = QtWidgets.QGroupBox(parent=self.layoutWidget2)
        self.id_aluno.setEnabled(True)
        self.id_aluno.setObjectName("id_aluno")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.id_aluno)
        self.verticalLayout.setObjectName("verticalLayout")
        self.nome_aluno = QtWidgets.QLineEdit(parent=self.id_aluno)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.nome_aluno.setFont(font)
        self.nome_aluno.setMaxLength(255)
        self.nome_aluno.setClearButtonEnabled(True)
        self.nome_aluno.setObjectName("nome_aluno")
        self.verticalLayout.addWidget(self.nome_aluno)
        self.codigo_NIS = QtWidgets.QLineEdit(parent=self.id_aluno)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.codigo_NIS.setFont(font)
        self.codigo_NIS.setMaxLength(255)
        self.codigo_NIS.setClearButtonEnabled(True)
        self.codigo_NIS.setObjectName("codigo_NIS")
        self.codigo_NIS.setValidator(QtGui.QIntValidator())
        self.verticalLayout.addWidget(self.codigo_NIS)
        self.label_id_racial = QtWidgets.QLabel(parent=self.id_aluno)
        self.label_id_racial.setObjectName("label_id_racial")
        self.verticalLayout.addWidget(self.label_id_racial)
        self.sel_id_racial = QtWidgets.QComboBox(parent=self.id_aluno)
        self.sel_id_racial.setObjectName("sel_id_racial")
        self.sel_id_racial.addItem("")
        self.sel_id_racial.addItem("")
        self.sel_id_racial.addItem("")
        self.sel_id_racial.addItem("")
        self.sel_id_racial.addItem("")
        self.sel_id_racial.addItem("")
        self.verticalLayout.addWidget(self.sel_id_racial)
        self.label_sexo = QtWidgets.QLabel(parent=self.id_aluno)
        self.label_sexo.setObjectName("label_sexo")
        self.verticalLayout.addWidget(self.label_sexo)
        self.sel_sexo = QtWidgets.QComboBox(parent=self.id_aluno)
        self.sel_sexo.setObjectName("sel_sexo")
        self.sel_sexo.addItem("")
        self.sel_sexo.addItem("")
        self.sel_sexo.addItem("")
        self.verticalLayout.addWidget(self.sel_sexo)
        self.nascimento_uf = QtWidgets.QLineEdit(parent=self.id_aluno)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.nascimento_uf.setFont(font)
        self.nascimento_uf.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhUppercaseOnly)
        self.nascimento_uf.setText("")
        self.nascimento_uf.setMaxLength(2)
        self.nascimento_uf.setClearButtonEnabled(False)
        self.nascimento_uf.setObjectName("nascimento_uf")
        self.verticalLayout.addWidget(self.nascimento_uf)
        self.nascimento_municipio = QtWidgets.QLineEdit(parent=self.id_aluno)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.nascimento_municipio.setFont(font)
        self.nascimento_municipio.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.nascimento_municipio.setText("")
        self.nascimento_municipio.setMaxLength(30)
        self.nascimento_municipio.setClearButtonEnabled(False)
        self.nascimento_municipio.setObjectName("nascimento_municipio")
        self.verticalLayout.addWidget(self.nascimento_municipio)
        self.label_certidao_civil = QtWidgets.QLabel(parent=self.id_aluno)
        self.label_certidao_civil.setObjectName("label_certidao_civil")
        self.verticalLayout.addWidget(self.label_certidao_civil)
        self.sel_certidao_civil = QtWidgets.QComboBox(parent=self.id_aluno)
        self.sel_certidao_civil.setObjectName("sel_certidao_civil")
        self.sel_certidao_civil.addItem("")
        self.sel_certidao_civil.addItem("")
        self.sel_certidao_civil.addItem("")
        self.verticalLayout.addWidget(self.sel_certidao_civil)
        self.certidao_antiga = QtWidgets.QGroupBox(parent=self.id_aluno)
        self.certidao_antiga.setObjectName("certidao_antiga")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.certidao_antiga)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.numero_termo = QtWidgets.QLineEdit(parent=self.certidao_antiga)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.numero_termo.setFont(font)
        self.numero_termo.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly)
        self.numero_termo.setMaxLength(8)
        self.numero_termo.setClearButtonEnabled(False)
        self.numero_termo.setObjectName("numero_termo")
        self.numero_termo.setValidator(QtGui.QIntValidator())
        self.horizontalLayout.addWidget(self.numero_termo)
        self.livro = QtWidgets.QLineEdit(parent=self.certidao_antiga)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.livro.setFont(font)
        self.livro.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.livro.setMaxLength(8)
        self.livro.setClearButtonEnabled(False)
        self.livro.setObjectName("livro")
        self.livro.setValidator(QtGui.QIntValidator())
        self.horizontalLayout.addWidget(self.livro)
        self.folha = QtWidgets.QLineEdit(parent=self.certidao_antiga)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.folha.setFont(font)
        self.folha.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.folha.setMaxLength(4)
        self.folha.setClearButtonEnabled(False)
        self.folha.setObjectName("folha")
        self.folha.setValidator(QtGui.QIntValidator())
        self.horizontalLayout.addWidget(self.folha)
        self.label_data_exp_certidao = QtWidgets.QLabel(parent=self.certidao_antiga)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_data_exp_certidao.setFont(font)
        self.label_data_exp_certidao.setWordWrap(True)
        self.label_data_exp_certidao.setObjectName("label_data_exp_certidao")
        self.horizontalLayout.addWidget(self.label_data_exp_certidao)
        self.data_expedicao = QtWidgets.QDateEdit(parent=self.certidao_antiga)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.data_expedicao.setFont(font)
        self.data_expedicao.setCalendarPopup(True)
        self.data_expedicao.setObjectName("data_expedicao")
        self.horizontalLayout.addWidget(self.data_expedicao)
        self.verticalLayout.addWidget(self.certidao_antiga)
        self.certidao_nova = QtWidgets.QGroupBox(parent=self.id_aluno)
        self.certidao_nova.setObjectName("certidao_nova")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.certidao_nova)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.numero_registro_civil = QtWidgets.QLineEdit(parent=self.certidao_nova)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.numero_registro_civil.setFont(font)
        self.numero_registro_civil.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.numero_registro_civil.setMaxLength(255)
        self.numero_registro_civil.setCursorPosition(0)
        self.numero_registro_civil.setClearButtonEnabled(False)
        self.numero_registro_civil.setObjectName("numero_registro_civil")
        self.numero_registro_civil.setValidator(QtGui.QIntValidator())
        self.horizontalLayout_2.addWidget(self.numero_registro_civil)
        self.verticalLayout.addWidget(self.certidao_nova)
        self.info_documentos = QtWidgets.QGroupBox(parent=self.id_aluno)
        self.info_documentos.setObjectName("info_documentos")
        self.gridLayout = QtWidgets.QGridLayout(self.info_documentos)
        self.gridLayout.setObjectName("gridLayout")
        self.label_data_exp_info_doc = QtWidgets.QLabel(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_data_exp_info_doc.setFont(font)
        self.label_data_exp_info_doc.setWordWrap(True)
        self.label_data_exp_info_doc.setObjectName("label_data_exp_info_doc")
        self.gridLayout.addWidget(self.label_data_exp_info_doc, 3, 1, 1, 1)
        self.cpf_aluno = QtWidgets.QLineEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.cpf_aluno.setFont(font)
        self.cpf_aluno.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhUppercaseOnly)
        self.cpf_aluno.setText("")
        self.cpf_aluno.setMaxLength(15)
        self.cpf_aluno.setClearButtonEnabled(False)
        self.cpf_aluno.setObjectName("cpf_aluno")
        self.gridLayout.addWidget(self.cpf_aluno, 4, 0, 1, 1)
        self.documento_tipo = QtWidgets.QLineEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.documento_tipo.setFont(font)
        self.documento_tipo.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.documento_tipo.setText("")
        self.documento_tipo.setMaxLength(30)
        self.documento_tipo.setClearButtonEnabled(False)
        self.documento_tipo.setObjectName("documento_tipo")
        self.gridLayout.addWidget(self.documento_tipo, 3, 0, 1, 1)
        self.data_exp = QtWidgets.QDateEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.data_exp.setFont(font)
        self.data_exp.setCalendarPopup(True)
        self.data_exp.setObjectName("data_exp")
        self.gridLayout.addWidget(self.data_exp, 4, 1, 1, 1)
        self.cartorio_nome = QtWidgets.QLineEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.cartorio_nome.setFont(font)
        self.cartorio_nome.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.cartorio_nome.setText("")
        self.cartorio_nome.setMaxLength(30)
        self.cartorio_nome.setClearButtonEnabled(False)
        self.cartorio_nome.setObjectName("cartorio_nome")
        self.gridLayout.addWidget(self.cartorio_nome, 2, 1, 1, 1)
        self.cartorio_uf = QtWidgets.QLineEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.cartorio_uf.setFont(font)
        self.cartorio_uf.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhUppercaseOnly)
        self.cartorio_uf.setText("")
        self.cartorio_uf.setMaxLength(2)
        self.cartorio_uf.setClearButtonEnabled(False)
        self.cartorio_uf.setObjectName("cartorio_uf")
        self.gridLayout.addWidget(self.cartorio_uf, 0, 0, 1, 1)
        self.documento_orgao_emissor = QtWidgets.QLineEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.documento_orgao_emissor.setFont(font)
        self.documento_orgao_emissor.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhUppercaseOnly)
        self.documento_orgao_emissor.setText("")
        self.documento_orgao_emissor.setMaxLength(2)
        self.documento_orgao_emissor.setClearButtonEnabled(False)
        self.documento_orgao_emissor.setObjectName("documento_orgao_emissor")
        self.gridLayout.addWidget(self.documento_orgao_emissor, 0, 1, 1, 1)
        self.cartorio_municipio = QtWidgets.QLineEdit(parent=self.info_documentos)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.cartorio_municipio.setFont(font)
        self.cartorio_municipio.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhNone)
        self.cartorio_municipio.setText("")
        self.cartorio_municipio.setMaxLength(30)
        self.cartorio_municipio.setClearButtonEnabled(False)
        self.cartorio_municipio.setObjectName("cartorio_municipio")
        self.gridLayout.addWidget(self.cartorio_municipio, 2, 0, 1, 1)
        self.verticalLayout.addWidget(self.info_documentos)
        self.verticalLayout_4.addWidget(self.id_aluno)
        self.InformacoesdeMAtricula = QtWidgets.QGroupBox(parent=self.layoutWidget2)
        self.InformacoesdeMAtricula.setObjectName("InformacoesdeMAtricula")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.InformacoesdeMAtricula)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.nome_aluno_2 = QtWidgets.QLineEdit(parent=self.InformacoesdeMAtricula)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(11)
        self.nome_aluno_2.setFont(font)
        self.nome_aluno_2.setMaxLength(255)
        self.nome_aluno_2.setClearButtonEnabled(True)
        self.nome_aluno_2.setObjectName("nome_aluno_2")
        self.gridLayout_3.addWidget(self.nome_aluno_2, 0, 0, 1, 8)
        self.lab_zona_3 = QtWidgets.QLabel(parent=self.InformacoesdeMAtricula)
        self.lab_zona_3.setObjectName("lab_zona_3")
        self.gridLayout_3.addWidget(self.lab_zona_3, 4, 1, 1, 1)
        self.lab_zona_4 = QtWidgets.QLabel(parent=self.InformacoesdeMAtricula)
        self.lab_zona_4.setObjectName("lab_zona_4")
        self.gridLayout_3.addWidget(self.lab_zona_4, 4, 2, 1, 1)
        self.altas_habilidades_2 = QtWidgets.QCheckBox(parent=self.InformacoesdeMAtricula)
        self.altas_habilidades_2.setObjectName("altas_habilidades_2")
        self.gridLayout_3.addWidget(self.altas_habilidades_2, 4, 5, 1, 1)
        self.sel_zona_3 = QtWidgets.QComboBox(parent=self.InformacoesdeMAtricula)
        self.sel_zona_3.setObjectName("sel_zona_3")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.sel_zona_3.addItem("")
        self.gridLayout_3.addWidget(self.sel_zona_3, 5, 1, 1, 1)
        self.lab_zona_2 = QtWidgets.QLabel(parent=self.InformacoesdeMAtricula)
        self.lab_zona_2.setObjectName("lab_zona_2")
        self.gridLayout_3.addWidget(self.lab_zona_2, 4, 0, 1, 1)
        self.sel_zona_2 = QtWidgets.QComboBox(parent=self.InformacoesdeMAtricula)
        self.sel_zona_2.setObjectName("sel_zona_2")
        self.sel_zona_2.addItem("")
        self.sel_zona_2.addItem("")
        self.sel_zona_2.addItem("")
        self.sel_zona_2.addItem("")
        self.sel_zona_2.addItem("")
        self.gridLayout_3.addWidget(self.sel_zona_2, 5, 0, 1, 1)
        self.sel_zona_4 = QtWidgets.QComboBox(parent=self.InformacoesdeMAtricula)
        self.sel_zona_4.setObjectName("sel_zona_4")
        self.sel_zona_4.addItem("")
        self.sel_zona_4.addItem("")
        self.sel_zona_4.addItem("")
        self.sel_zona_4.addItem("")
        self.sel_zona_4.addItem("")
        self.sel_zona_4.addItem("")
        self.gridLayout_3.addWidget(self.sel_zona_4, 5, 2, 1, 3)
        self.altas_habilidades_3 = QtWidgets.QCheckBox(parent=self.InformacoesdeMAtricula)
        self.altas_habilidades_3.setObjectName("altas_habilidades_3")
        self.gridLayout_3.addWidget(self.altas_habilidades_3, 5, 5, 1, 1)
        self.codigo_turma = QtWidgets.QLineEdit(parent=self.InformacoesdeMAtricula)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.codigo_turma.setFont(font)
        self.codigo_turma.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly)
        self.codigo_turma.setText("")
        self.codigo_turma.setMaxLength(8)
        self.codigo_turma.setClearButtonEnabled(False)
        self.codigo_turma.setObjectName("codigo_turma")
        self.codigo_turma.setValidator(QtGui.QIntValidator())
        self.gridLayout_3.addWidget(self.codigo_turma, 2, 3, 1, 4)
        self.codigo_turma_2 = QtWidgets.QLineEdit(parent=self.InformacoesdeMAtricula)
        self.codigo_turma_2.setMinimumSize(QtCore.QSize(50, 0))
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.codigo_turma_2.setFont(font)
        self.codigo_turma_2.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhFormattedNumbersOnly)
        self.codigo_turma_2.setText("")
        self.codigo_turma_2.setMaxLength(4)
        self.codigo_turma_2.setClearButtonEnabled(False)
        self.codigo_turma_2.setObjectName("codigo_turma_2")
        self.codigo_turma_2.setValidator(QtGui.QIntValidator())
        self.gridLayout_3.addWidget(self.codigo_turma_2, 2, 7, 1, 1)
        self.data_matricula = QtWidgets.QDateEdit(parent=self.InformacoesdeMAtricula)
        self.data_matricula.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.data_matricula.setFont(font)
        self.data_matricula.setCalendarPopup(True)
        self.data_matricula.setObjectName("data_matricula")
        self.gridLayout_3.addWidget(self.data_matricula, 1, 4, 1, 2)
        self.data_ingresso_escola = QtWidgets.QDateEdit(parent=self.InformacoesdeMAtricula)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.data_ingresso_escola.setFont(font)
        self.data_ingresso_escola.setCalendarPopup(True)
        self.data_ingresso_escola.setObjectName("data_ingresso_escola")
        self.gridLayout_3.addWidget(self.data_ingresso_escola, 1, 1, 1, 1)
        self.codigo_inep = QtWidgets.QLineEdit(parent=self.InformacoesdeMAtricula)
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.codigo_inep.setFont(font)
        self.codigo_inep.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly)
        self.codigo_inep.setText("")
        self.codigo_inep.setMaxLength(8)
        self.codigo_inep.setClearButtonEnabled(False)
        self.codigo_inep.setObjectName("codigo_inep")
        self.codigo_inep.setValidator(QtGui.QIntValidator())
        self.gridLayout_3.addWidget(self.codigo_inep, 2, 0, 1, 3)
        self.label_data_exp_certidao_2 = QtWidgets.QLabel(parent=self.InformacoesdeMAtricula)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_data_exp_certidao_2.setFont(font)
        self.label_data_exp_certidao_2.setWordWrap(True)
        self.label_data_exp_certidao_2.setObjectName("label_data_exp_certidao_2")
        self.gridLayout_3.addWidget(self.label_data_exp_certidao_2, 1, 0, 1, 1)
        self.matricula = QtWidgets.QLineEdit(parent=self.InformacoesdeMAtricula)
        self.matricula.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Inter Medium")
        font.setPointSize(10)
        self.matricula.setFont(font)
        self.matricula.setInputMethodHints(QtCore.Qt.InputMethodHint.ImhDigitsOnly)
        self.matricula.setText("")
        self.matricula.setMaxLength(8)
        self.matricula.setClearButtonEnabled(False)
        self.matricula.setObjectName("matricula")
        self.matricula.setValidator(QtGui.QIntValidator())
        self.gridLayout_3.addWidget(self.matricula, 1, 6, 1, 2)
        self.label_data_exp_certidao_3 = QtWidgets.QLabel(parent=self.InformacoesdeMAtricula)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_data_exp_certidao_3.setFont(font)
        self.label_data_exp_certidao_3.setWordWrap(True)
        self.label_data_exp_certidao_3.setObjectName("label_data_exp_certidao_3")
        self.gridLayout_3.addWidget(self.label_data_exp_certidao_3, 1, 2, 1, 2)
        self.verticalLayout_4.addWidget(self.InformacoesdeMAtricula)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "UI_Cadastro_Aluno"))
        self.pushButton.setText(_translate("MainWindow", "Enviar Dados"))
        self.groupBox.setTitle(_translate("MainWindow", "Dados dos Pais/Responsáveis"))
        self.nome_pai.setPlaceholderText(_translate("MainWindow", "Nome do Pai"))
        self.nome_mae.setPlaceholderText(_translate("MainWindow", "Nome da Mãe"))
        self.deficiencias.setTitle(_translate("MainWindow", "Deficiências"))
        self.def_baixa_visao.setText(_translate("MainWindow", "Baixa Visão"))
        self.def_cegueira.setText(_translate("MainWindow", "Cegueira"))
        self.def_auditiva.setText(_translate("MainWindow", "Deficiência Auditiva"))
        self.def_intelectual.setText(_translate("MainWindow", "Deficiência Intelectual"))
        self.def_fisica.setText(_translate("MainWindow", "Deficiência Física"))
        self.def_multipla.setText(_translate("MainWindow", "Deficiência Múltipla"))
        self.def_down.setText(_translate("MainWindow", "Sindrome de Down"))
        self.def_surdez.setText(_translate("MainWindow", "Surdez"))
        self.def_surdocegueira.setText(_translate("MainWindow", "Surdocegueira"))
        self.transtorno_global_desenvolvimento.setTitle(_translate("MainWindow", "Transtorno Global do Desenvolvimento"))
        self.def_autismo.setText(_translate("MainWindow", "Autismo"))
        self.def_rett.setText(_translate("MainWindow", "Sindrome de Rett"))
        self.def_asperger.setText(_translate("MainWindow", "Sindrome de Asperger"))
        self.def_TDI.setText(_translate("MainWindow", "Transtorno desintegrativo da infância"))
        self.groupBox_8.setTitle(_translate("MainWindow", "Altas Habilidades / Superdotação"))
        self.altas_habilidades.setText(_translate("MainWindow", "Altas Habilidades / Superdotação"))
        self.caixa_endereco.setTitle(_translate("MainWindow", "Endereço"))
        self.municipio_endereco.setPlaceholderText(_translate("MainWindow", "Município*"))
        self.CEP.setPlaceholderText(_translate("MainWindow", "CEP*"))
        self.bairro_endereco.setPlaceholderText(_translate("MainWindow", "Bairro"))
        self.complemento.setPlaceholderText(_translate("MainWindow", "Complemento"))
        self.numero.setPlaceholderText(_translate("MainWindow", "N°"))
        self.endereco.setPlaceholderText(_translate("MainWindow", "Endereço"))
        self.uf_endereco.setPlaceholderText(_translate("MainWindow", "UF"))
        self.telefone.setPlaceholderText(_translate("MainWindow", "Telefone"))
        self.lab_zona.setText(_translate("MainWindow", "Zona*"))
        self.sel_zona.setItemText(0, _translate("MainWindow", "Rural"))
        self.sel_zona.setItemText(1, _translate("MainWindow", "Urbana"))
        self.sel_zona.setItemText(2, _translate("MainWindow", "N/A"))
        self.email.setPlaceholderText(_translate("MainWindow", "Email"))
        self.id_aluno.setTitle(_translate("MainWindow", "Identificação do Aluno"))
        self.nome_aluno.setPlaceholderText(_translate("MainWindow", "Nome do Aluno"))
        self.codigo_NIS.setPlaceholderText(_translate("MainWindow", "NIS"))
        self.label_id_racial.setText(_translate("MainWindow", "Identidade Racial"))
        self.sel_id_racial.setItemText(0, _translate("MainWindow", "Branca"))
        self.sel_id_racial.setItemText(1, _translate("MainWindow", "Preta"))
        self.sel_id_racial.setItemText(2, _translate("MainWindow", "Parda"))
        self.sel_id_racial.setItemText(3, _translate("MainWindow", "Amarela"))
        self.sel_id_racial.setItemText(4, _translate("MainWindow", "Indígena"))
        self.sel_id_racial.setItemText(5, _translate("MainWindow", "N/A"))
        self.label_sexo.setText(_translate("MainWindow", "Sexo*"))
        self.sel_sexo.setItemText(0, _translate("MainWindow", "Masculino"))
        self.sel_sexo.setItemText(1, _translate("MainWindow", "Feminino"))
        self.sel_sexo.setItemText(2, _translate("MainWindow", "N/A"))
        self.nascimento_uf.setPlaceholderText(_translate("MainWindow", "UF*"))
        self.nascimento_municipio.setPlaceholderText(_translate("MainWindow", "Município de nascimento*"))
        self.label_certidao_civil.setText(_translate("MainWindow", "Tipo da Certidão Civil"))
        self.sel_certidao_civil.setItemText(0, _translate("MainWindow", "Nascimento"))
        self.sel_certidao_civil.setItemText(1, _translate("MainWindow", "Casamento"))
        self.sel_certidao_civil.setItemText(2, _translate("MainWindow", "N/A"))
        self.certidao_antiga.setTitle(_translate("MainWindow", "Certidão Modelo Antigo"))
        self.numero_termo.setPlaceholderText(_translate("MainWindow", "Numero Termo"))
        self.livro.setPlaceholderText(_translate("MainWindow", "Livro"))
        self.folha.setPlaceholderText(_translate("MainWindow", "Folha"))
        self.label_data_exp_certidao.setText(_translate("MainWindow", "Data de Expedição"))
        self.data_expedicao.setDisplayFormat(_translate("MainWindow", "d/M/yyyy"))
        self.certidao_nova.setTitle(_translate("MainWindow", "Certidão Modelo Novo"))
        self.numero_registro_civil.setPlaceholderText(_translate("MainWindow", "Numero de Matrícula (Registro Civil)"))
        self.info_documentos.setTitle(_translate("MainWindow", "Informações Documentadas"))
        self.label_data_exp_info_doc.setText(_translate("MainWindow", "Data de Expedição"))
        self.cpf_aluno.setPlaceholderText(_translate("MainWindow", "Cadastro de Pessoa Física (CPF)"))
        self.documento_tipo.setPlaceholderText(_translate("MainWindow", "Identidade, Documento Estrangerio ou Passaporte"))
        self.data_exp.setDisplayFormat(_translate("MainWindow", "d/M/yyyy"))
        self.cartorio_nome.setPlaceholderText(_translate("MainWindow", "Nome do Cartório"))
        self.cartorio_uf.setPlaceholderText(_translate("MainWindow", "UF - Cartório"))
        self.documento_orgao_emissor.setPlaceholderText(_translate("MainWindow", "Orgão Emissor"))
        self.cartorio_municipio.setPlaceholderText(_translate("MainWindow", "Município do Cartório"))
        self.InformacoesdeMAtricula.setTitle(_translate("MainWindow", "Informações de Matricula"))
        self.nome_aluno_2.setPlaceholderText(_translate("MainWindow", "Nome da Escola"))
        self.lab_zona_3.setText(_translate("MainWindow", "Série*"))
        self.lab_zona_4.setText(_translate("MainWindow", "Codigo de Procedência*"))
        self.altas_habilidades_2.setText(_translate("MainWindow", "Programa Bolsa Família"))
        self.sel_zona_3.setItemText(0, _translate("MainWindow", "01. Berçário I"))
        self.sel_zona_3.setItemText(1, _translate("MainWindow", "02. Berçário II"))
        self.sel_zona_3.setItemText(2, _translate("MainWindow", "03. Maternal I"))
        self.sel_zona_3.setItemText(3, _translate("MainWindow", "04. Maternal II"))
        self.sel_zona_3.setItemText(4, _translate("MainWindow", "05. Jardim I"))
        self.sel_zona_3.setItemText(5, _translate("MainWindow", "06. Jardim II"))
        self.sel_zona_3.setItemText(6, _translate("MainWindow", "07. Ciclo I - 1° Ano"))
        self.sel_zona_3.setItemText(7, _translate("MainWindow", "08. Ciclo I - 2° Ano"))
        self.sel_zona_3.setItemText(8, _translate("MainWindow", "09. Ciclo I - 3° Ano"))
        self.sel_zona_3.setItemText(9, _translate("MainWindow", "10. Ciclo II - 1° Ano"))
        self.sel_zona_3.setItemText(10, _translate("MainWindow", "11. Ciclo II - 2° Ano"))
        self.sel_zona_3.setItemText(11, _translate("MainWindow", "12. Ciclo III - 1° Ano"))
        self.sel_zona_3.setItemText(12, _translate("MainWindow", "13. Ciclo III - 2° Ano"))
        self.sel_zona_3.setItemText(13, _translate("MainWindow", "14. Ciclo IV - 1° Ano"))
        self.sel_zona_3.setItemText(14, _translate("MainWindow", "15. Ciclo IV - 2° Ano"))
        self.sel_zona_3.setItemText(15, _translate("MainWindow", "16. 1ª Totalidade"))
        self.sel_zona_3.setItemText(16, _translate("MainWindow", "17.  2ª Totalidade"))
        self.sel_zona_3.setItemText(17, _translate("MainWindow", "18.  3ª Etapa"))
        self.sel_zona_3.setItemText(18, _translate("MainWindow", "19.  4ª Etapa"))
        self.sel_zona_3.setItemText(19, _translate("MainWindow", "20. 1° Ano"))
        self.sel_zona_3.setItemText(20, _translate("MainWindow", "21. 2° Ano"))
        self.sel_zona_3.setItemText(21, _translate("MainWindow", "22. 3° Ano"))
        self.sel_zona_3.setItemText(22, _translate("MainWindow", "23. 4° Ano"))
        self.lab_zona_2.setText(_translate("MainWindow", "Turno*"))
        self.sel_zona_2.setItemText(0, _translate("MainWindow", "Manhã"))
        self.sel_zona_2.setItemText(1, _translate("MainWindow", "Intermediário"))
        self.sel_zona_2.setItemText(2, _translate("MainWindow", "Tarde"))
        self.sel_zona_2.setItemText(3, _translate("MainWindow", "Noite"))
        self.sel_zona_2.setItemText(4, _translate("MainWindow", "Tempo Integral"))
        self.sel_zona_4.setItemText(0, _translate("MainWindow", "01 - Do Lar"))
        self.sel_zona_4.setItemText(1, _translate("MainWindow", "02 - Escola Municipal"))
        self.sel_zona_4.setItemText(2, _translate("MainWindow", "03 - Escola Estadual"))
        self.sel_zona_4.setItemText(3, _translate("MainWindow", "04 - Escola Particular"))
        self.sel_zona_4.setItemText(4, _translate("MainWindow", "05 - Escola Federal"))
        self.sel_zona_4.setItemText(5, _translate("MainWindow", "06 - Escola Comunitária"))
        self.altas_habilidades_3.setText(_translate("MainWindow", "Transporte Escolar?"))
        self.codigo_turma.setPlaceholderText(_translate("MainWindow", "Codigo Turma*"))
        self.codigo_turma_2.setPlaceholderText(_translate("MainWindow", "Ano Letivo*"))
        self.data_matricula.setDisplayFormat(_translate("MainWindow", "d/M/yyyy"))
        self.data_ingresso_escola.setDisplayFormat(_translate("MainWindow", "d/M/yyyy"))
        self.codigo_inep.setPlaceholderText(_translate("MainWindow", "Codigo Senso Inep*"))
        self.label_data_exp_certidao_2.setText(_translate("MainWindow", "Data de Ingresso"))
        self.matricula.setPlaceholderText(_translate("MainWindow", "Matricula*"))
        self.label_data_exp_certidao_3.setText(_translate("MainWindow", "Data de Matricula"))


    def matricula_aluno(self):
        try:
            resultado_identificacao = self.insert_identificacao_aluno_ui()
            if not resultado_identificacao:
                raise Exception("Falha ao inserir identificação do aluno")

            resultado_saude = self.insert_saude_ui()
            if not resultado_saude:
                raise Exception("Falha ao inserir informações de saúde")

            resultado_endereco = self.insert_endereco_ui()
            if not resultado_endereco:
                raise Exception("Falha ao inserir endereço")

            resultado_dados_pais = self.insert_dados_pais_ui()
            if not resultado_dados_pais:
                raise Exception("Falha ao inserir dados dos pais ou responsáveis")

            resultado_informacoes_matricula = self.insert_informacoes_matricula_ui()
            if not resultado_informacoes_matricula:
                raise Exception("Falha ao inserir informações da matrícula")

            resultado_certidao = self.insert_certidao_ui()
            if not resultado_certidao:
                raise Exception("Falha ao inserir certidão")

            self.salvar_excel()

            self.exibir_mensagem_sucesso()

        except Exception as e:
            print(str(e))
            self.exibir_mensagem_erro()


    def insert_identificacao_aluno_ui(self):
        try:
            nome_aluno = self.nome_aluno.text()
            codigo_NIS = self.codigo_NIS.text()
            raca_aluno = self.sel_id_racial.currentText()
            sexo_aluno = self.sel_sexo.currentText()
            nascimento_uf = self.nascimento_uf.text()
            nascimento_municipio = self.nascimento_municipio.text()
            cartorio_uf = self.cartorio_uf.text()
            nome_cartorio = self.cartorio_nome.text()
            cartorio_municipio = self.cartorio_municipio.text()
            data_exp_identidade = self.data_expedicao.date().toString("yyyy-MM-dd")
            orgao_emissor = self.documento_orgao_emissor.text()
            uf_identidade = self.nascimento_uf.text()
            cpf = self.cpf_aluno.text()

            if not all([nome_aluno, codigo_NIS, raca_aluno, sexo_aluno, nascimento_uf, nascimento_municipio,
                    cartorio_uf, nome_cartorio, cartorio_municipio, data_exp_identidade, orgao_emissor,
                    uf_identidade, cpf]):

                QMessageBox(QMessageBox.Icon.Warning, "Erro", "Alguns campos do Identificação do Aluno estão vazios", QMessageBox.StandardButton.Ok).exec()
                return False

            resultado = insert_identificacao_aluno(codigo_NIS, nome_aluno,
                                        sexo_aluno, nascimento_uf, nascimento_municipio,
                                        cartorio_uf, nome_cartorio, cartorio_municipio, data_exp_identidade,
                                        orgao_emissor, uf_identidade, cpf, raca_aluno)
            return True if resultado else False
        except Exception as e:
            print(f"Erro ao inserir identificação do aluno: {e}")
            return False

    def insert_saude_ui(self):
        try:
            autismo = self.def_autismo.isChecked()
            rett = self.def_rett.isChecked()
            asperger = self.def_asperger.isChecked()
            transtorno_desintegrativo = self.def_TDI.isChecked()
            baixa_visao = self.def_baixa_visao.isChecked()
            cegueira = self.def_cegueira.isChecked()
            auditiva = self.def_auditiva.isChecked()
            intelectual = self.def_intelectual.isChecked()
            fisica = self.def_fisica.isChecked()
            multipla = self.def_multipla.isChecked()
            sindrome_down = self.def_down.isChecked()
            surdez = self.def_surdez.isChecked()
            surdocegueira = self.def_surdocegueira.isChecked()
            altas_habilidades = self.altas_habilidades.isChecked()

            resultado = insert_saude(autismo, rett, asperger, transtorno_desintegrativo,
                                baixa_visao, cegueira, auditiva, intelectual, fisica,
                                multipla, sindrome_down, surdez, surdocegueira, altas_habilidades)
            return True if resultado else False
        except Exception as e:
            print(f"Erro ao inserir informações de saúde: {e}")
            return False

    def insert_endereco_ui(self):
        try:
            endereco = self.endereco.text()
            complemento = self.complemento.text()  
            numero_endereco = self.numero.text()  
            municipio = self.municipio_endereco.text()  
            bairro = self.bairro_endereco.text()  
            cep = self.CEP.text()
            zona = self.sel_zona.currentText()
            telefone = self.telefone.text()
            email = self.email.text()
            uf = self.uf_endereco.text()

            resultado = insert_endereco(endereco, complemento, numero_endereco, municipio, bairro, cep, zona, telefone, email, uf)
            return True if resultado else False
        except Exception as e:
            print(f"Erro ao inserir endereço: {e}")
            return False

    def insert_dados_pais_ui(self):
        try:
            nome_pai = self.nome_pai.text()
            nome_mae = self.nome_mae.text()

            if not all([nome_pai, nome_mae]):

                QMessageBox(QMessageBox.Icon.Warning, "Erro", "Alguns campos Dados dos Pais estão vazios", QMessageBox.StandardButton.Ok).exec()
                return False

            resultado = insert_dados_pais_responsavel(nome_mae, nome_pai)
            return True if resultado else False
        except Exception as e:
            print(f"Erro ao inserir dados dos pais ou responsáveis: {e}")
            return False

    def insert_informacoes_matricula_ui(self):
        try:
            nome_escola = self.nome_aluno_2.text()
            codigo_turma = self.codigo_turma.text()
            data_matricula = self.data_matricula.text()
            codigo_inep = self.codigo_inep.text()
            matricula = self.matricula.text()
            data_ingresso_escola = self.data_ingresso_escola.text()
            turno = self.sel_zona_2.currentText()
            serie = self.sel_zona_3.currentText() 
            codigo_procedencia = self.sel_zona_4.currentText()
            programa_bolsa_familia = self.altas_habilidades_2.isChecked()  
            transporte_escolar = self.altas_habilidades_3.isChecked()

            if not all([nome_escola, codigo_turma, data_matricula, codigo_inep, matricula, data_ingresso_escola,
                    turno, serie, codigo_procedencia]):

                QMessageBox(QMessageBox.Icon.Warning, "Erro", "Alguns campos do Iformações da Matrícula estão vazios", QMessageBox.StandardButton.Ok).exec()
                return False

            resultado = insert_informacoes_matricula(nome_escola, codigo_inep, data_ingresso_escola, matricula, data_matricula, codigo_turma, programa_bolsa_familia, transporte_escolar, turno, serie, codigo_procedencia)
            return True if resultado else False
        except Exception as e:
            print(f"Erro ao inserir informações da matrícula: {e}")
            return False

    def insert_certidao_ui(self):
        try:
            num_matricula_registro_civil = self.numero_registro_civil.text()  
            num_termo = self.numero_termo.text()
            livro = self.livro.text()
            folha = self.folha.text()
            data_expedicao_certidao = self.data_expedicao.date().toString("yyyy-MM-dd")

            resultado = insert_certidao(num_matricula_registro_civil, num_termo, livro, folha, data_expedicao_certidao)
            return True if resultado else False
        except Exception as e:
            print(f"Erro ao inserir certidão: {e}")
            return False

    def bool_para_sim_nao(self,valor):
        return "SIM" if valor else "NÃO"

    def salvar_excel(self):
        nome_arquivo = 'base_dados_alunos.xlsx'

        informacoes_aluno = {
            "NOME ALUNO": self.nome_aluno.text(),
            "NIS": self.codigo_NIS.text(),
            "RAÇA ALUNO": self.sel_id_racial.currentText(),
            "SEXO": self.sel_sexo.currentText(),
            "UF": self.nascimento_uf.text(),
            "MUNICÍPIO": self.nascimento_municipio.text(),
            "UF CARTÓRIO": self.cartorio_uf.text(),
            "NOME CARTÓRIO": self.cartorio_nome.text(),
            "MUNICÍPIO CARTÓRIO": self.cartorio_municipio.text(),
            "DATA EXP IDENTIDADE": self.data_expedicao.date().toString("yyyy-MM-dd"),
            "ÓRGÃO EMISSOR": self.documento_orgao_emissor.text(),
            "UF IDENTIDADE": self.nascimento_uf.text(),
            "CPF": self.cpf_aluno.text(),
            "AUTISMO": self.def_autismo.isChecked(),
            "RETT": self.def_rett.isChecked(),
            "ASPERGER": self.def_asperger.isChecked(),
            "TRANSTORNO DESINTEGRATIVO": self.def_TDI.isChecked(),
            "BAIXA VISÃO": self.def_baixa_visao.isChecked(),
            "CEGUEIRA": self.def_cegueira.isChecked(),
            "AUDITIVA": self.def_auditiva.isChecked(),
            "INTELECTUAL": self.def_intelectual.isChecked(),
            "FÍSICA": self.def_fisica.isChecked(),
            "MÚLTIPLA": self.def_multipla.isChecked(),
            "SÍNDROME DE DOWN": self.def_down.isChecked(),
            "SURDEZ": self.def_surdez.isChecked(),
            "SURDO E CEGO": self.def_surdocegueira.isChecked(),
            "ALTAS HABILIDADES": self.altas_habilidades.isChecked(),
            "ENDEREÇO": self.endereco.text(),
            "COMPLEMENTO": self.complemento.text(),
            "NÚMERO ENDEREÇO": self.numero.text(),
            "MUNICÍPIO": self.municipio_endereco.text(),
            "BAIRRO": self.bairro_endereco.text(),
            "CEP": self.CEP.text(),
            "ZONA": self.sel_zona.currentText(),
            "TELEFONE": self.telefone.text(),
            "EMAIL": self.email.text(),
            "UF": self.uf_endereco.text(),
            "NOME PAI": self.nome_pai.text(),
            "NOME MÃE": self.nome_mae.text(),
            "NOME ESCOLA": self.nome_aluno_2.text(),
            "CÓDIGO TURMA": self.codigo_turma.text(),
            "DATA MATRÍCULA": self.data_matricula.text(),
            "COD INEP": self.codigo_inep.text(),
            "MATRÍCULA": self.matricula.text(),
            "DATA INGRESSO ESCOLA": self.data_ingresso_escola.text(),
            "TURNO": self.sel_zona_2.currentText(),
            "SÉRIE": self.sel_zona_3.currentText(),
            "CÓDIGO PROCEDÊNCIA": self.sel_zona_4.currentText(),
            "BOLSA FAMÍLIA": self.altas_habilidades_2.isChecked(),
            "TRANSPORTE ESCOLAR": self.altas_habilidades_3.isChecked(),
            "MATRÍCULA REGISTRO CIVIL": self.numero_registro_civil.text(),
            "NUM TERMO": self.numero_termo.text(),
            "LIVRO": self.livro.text(),
            "FOLHA": self.folha.text(),
            "DATA EXP CERTIDÃO": self.data_expedicao.date().toString("yyyy-MM-dd")
        }

        for chave, valor in informacoes_aluno.items():
            if isinstance(valor, bool):
                informacoes_aluno[chave] = self.bool_para_sim_nao(valor)

        adicionar_dados_excel(nome_arquivo, informacoes_aluno)

    def exibir_mensagem_sucesso(self):
        mensagem = QMessageBox()
        mensagem.setIcon(QMessageBox.Icon.Information)
        mensagem.setText(f"Aluno matriculado com sucesso!: {self.nome_aluno.text()}")
        mensagem.setWindowTitle("Confirmação de matricula")
        mensagem.setStandardButtons(QMessageBox.StandardButton.Ok)
        mensagem.exec()
    
    def exibir_mensagem_erro(self):
        mensagem = QMessageBox()
        mensagem.setIcon(QMessageBox.Icon.Information)
        mensagem.setText("Ocorreu um erro ao matricular o aluno, tente novamente.")
        mensagem.setWindowTitle("Confirmação de matricula ERRO")
        mensagem.setStandardButtons(QMessageBox.StandardButton.Ok)
        mensagem.exec()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = UI_MatriculaWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
